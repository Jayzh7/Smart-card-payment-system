create table FSS_ABNORMAL_TRANSACTIONS
 (TRANSACTIONNR NUMBER,
  DOWNLOADDATE DATE,
  TERMINALID VARCHAR2(10),
  CARDID VARCHAR2(17),
  TRANSACTIONDATE DATE,
  CARDOLDVALUE NUMBER,
  TRANSACTIONAMOUNT NUMBER,
  CARDNEWVALUE NUMBER,
  TRANSACTIONSTATUS VARCHAR2(1),
  ERRORCODE VARCHAR2(25),
  LODGEREF VARCHAR2(18)
);

create table FSS_ABNORMAL_ACCOUNTS
 (TRANSACTIONNR NUMBER,
  DOWNLOADDATE DATE,
  TERMINALID VARCHAR2(10),
  CARDID VARCHAR2(17),
  TRANSACTIONDATE DATE,
  CARDOLDVALUE NUMBER,
  TRANSACTIONAMOUNT NUMBER,
  CARDNEWVALUE NUMBER,
  TRANSACTIONSTATUS VARCHAR2(1),
  ERRORCODE VARCHAR2(25),
  LODGEREF VARCHAR2(18)
);

create table FSS_RUN_TABLE
(runID NUMBER PRIMARY KEY,
 RunStart DATE NOT NULL,
 RunEnd DATE,
 Outcome VARCHAR2(15),
 Remarks VARCHAR2(255));
 
 DROP TABLE FSS_RUN_TABLE;
 
 DROP TABLE RUN_LOG;
 create table FSS_DAILY_TRANSACTIONS
 (TRANSACTIONNR NUMBER,
  DOWNLOADDATE DATE,
  TERMINALID VARCHAR2(10),
  CARDID VARCHAR2(17),
  TRANSACTIONDATE DATE,
  CARDOLDVALUE NUMBER,
  TRANSACTIONAMOUNT NUMBER,
  CARDNEWVALUE NUMBER,
  TRANSACTIONSTATUS VARCHAR2(1),
  ERRORCODE VARCHAR2(25),
  LODGEREF VARCHAR2(18)
);

DROP TABLE FSS_DAILY_TRANSACTIONS;

TRUNCATE table FSS_DAILY_TRANSACTIONS;
TRUNCATE table FSS_DAILY_SETTLEMENT;

TRUNCATE table MY_LOG;
create table FSS_DAILY_SETTLEMENT
(SETTLEDATE DATE,
 MERCHANTID NUMBER,
 MERCHANTNAME VARCHAR(50),
 LODGEREF VARCHAR2(18),
 TOTALAMOUNT NUMBER
);

TRUNCATE TABLE  FSS_DAILY_SETTLEMENT;
DROP TABLE FSS_DAILY_SETTLEMENT;

CREATE SEQUENCE seq_lodge_ref
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE seq_run_id
START WITH 1
INCREMENT BY 1;

DROP DIRECTORY MY_DIR;
CREATE DIRECTORY ZJ_DIR as '/exports/orcloz';

truncate table FSS_RUN_TABLE;
DROP TABLE FSS_RUN_TABLE;

drop trigger tri_settlement_insert;

truncate table FSS_ABNORMAL_TRANSACTIONS;
truncate table FSS_ABNORMAL_ACCOUNTS;

CREATE OR REPLACE TRIGGER tri_trans
BEFORE INSERT
ON FSS_ABNORMAL_ACCOUNTS
FOR EACH ROW
BEGIN
select CARDID, TRANSACTIONDATE, CARDOLDVALUE, TRANSACTIONAMOUNT, CARDNEWVALUE
into :new.CARDID, :new.TRANSACTIONDATE, :new.CARDOLDVALUE, :new.TRANSACTIONAMOUNT, :new.CARDNEWVALUE
from FSS_DAILY_TRANSACTIONS
where TRANSACTIONNR = :new.TRANSACTIONNR;
END;
CREATE OR REPLACE TRIGGER tri_acc
BEFORE INSERT
ON FSS_ABNORMAL_TRANSACTIONS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
select CARDID, TRANSACTIONDATE, CARDOLDVALUE, TRANSACTIONAMOUNT, CARDNEWVALUE
into :new.CARDID, :new.TRANSACTIONDATE, :new.CARDOLDVALUE, :new.TRANSACTIONAMOUNT, :new.CARDNEWVALUE
from FSS_DAILY_TRANSACTIONS
where TRANSACTIONNR = :new.TRANSACTIONNR;
END;